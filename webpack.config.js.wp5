const path = require('path');

module.exports = {
  mode: 'production',
  entry: './src/rapidomize.js',
  output: {
    filename: 'rapidomize.js',
    // filename: argv.mode === 'production' ? `rapidomize.min.js` : `rapidomize.js`,
    path: path.resolve(__dirname, 'dist'),
    library: {
      name: 'rapidomize',
      type: 'umd',
    },
    chunkFormat: 'array-push',
    // library: 'rapidomize',
    // libraryTarget: 'umd',
    //for webpack 4.x as per https://github.com/webpack/webpack/issues/6784
    // globalObject: 'this'
  },
  target: ['node', 'web'],
  resolve: {
    fallback: {
      assert: false, //require.resolve('assert'),
      buffer: require.resolve('buffer'),
      console: require.resolve('console-browserify'),
      constants: false, //require.resolve('constants-browserify'),
      crypto: require.resolve('crypto-browserify'),
      domain: require.resolve('domain-browser'),
      events: require.resolve('events'),
      http: require.resolve('stream-http'),
      https: require.resolve('https-browserify'),
      os: false, //require.resolve('os-browserify/browser'),
      path: false, //require.resolve('path-browserify'),
      punycode: false, //require.resolve('punycode'),
      process: false, //require.resolve('process/browser'),
      querystring: require.resolve('querystring-es3'),
      stream: require.resolve('stream-browserify'),
      string_decoder: false, //require.resolve('string_decoder'),
      sys: false, //require.resolve('util'),
      timers: false, //require.resolve('timers-browserify'),
      tty: false, //require.resolve('tty-browserify'),
      url: require.resolve('url'),
      util: require.resolve('util'),
      vm: false, //require.resolve('vm-browserify'),
      zlib: require.resolve('browserify-zlib'),
    },
  }
};